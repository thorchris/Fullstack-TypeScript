import { Router } from "express";
const router = Router();
import facade from "../facades/DummyDB-Facade.xxx";
import {ApiError} from "../errors/apiError"

import authMiddleware from "../middleware/basic-auth";
router.use(authMiddleware);

router.get("/all", async (req: any, res) => {
  const friends = await facade.getAllFriends();
  const friendsDTO = friends.map((friend) => {
    const { firstName, lastName } = friend;
    return { firstName: firstName, lastName }; //Two ways, the silly way, and the easy way
  });
  res.json(friendsDTO);
});

router.get("/findby-username/:userid", async (req, res, next) => {
  const userId = req.params.userid;
  try{
  const friend = await facade.getFrind(userId);
  if (friend == null) {
    throw next(new ApiError("User not found", 404));
  }
  const { firstName, lastName, email } = friend;
  const friendDTO = { firstName, lastName, email };
  res.json(friendDTO);
} catch (err) {
  next(err)
}
});

router.get("/me", async (req: any, res, next) => {
  const userEmail = req.credentials.userName;
  try {
      const friend = await facade.getFrind(userEmail);
      if (friend == null) {
          throw new ApiError("user not found", 404);
      }
      const { firstName, lastName, email } = friend;
      const friendDTO = { firstName, lastName, email }
      res.json(friendDTO);
  } catch (err) {
      next(err)
  }
});

export default router;